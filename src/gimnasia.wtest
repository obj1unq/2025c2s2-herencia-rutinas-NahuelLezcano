import gimnasia.*

describe "rutinas" {

	const maratonBA            = new Maraton(intensidad = 1.5)  // Una maraton con intensidad 1.5
	const correrEnLaPlaya      = new Running(intensidad = 1.2)  // Una actividad de running con intensisdad 1.2
	const remarEnElDelta       = new Remo()                     // Una actividad de remo
	const remarEnCaminoRemeros = new RemoDeCompeticion()        // Una actividad de remo comptetitivo
	

	test "consulta running" {

		assert.equals(360, correrEnLaPlaya.quemarCalorias(5))
		assert.equals(10200, correrEnLaPlaya.quemarCalorias(90))
	}

	test "consulta maraton" {
		
		assert.equals(900, maratonBA.quemarCalorias(5))
		assert.equals(25500, maratonBA.quemarCalorias(90))
	}

	test "consulta remo" {
		
		assert.equals(520, remarEnElDelta.quemarCalorias(5))
		assert.equals(9360, remarEnElDelta.quemarCalorias(90))
	}

	test "consulta remo competitivo" {
		assert.equals(510, remarEnCaminoRemeros.quemarCalorias(5))
		assert.equals(12750, remarEnCaminoRemeros.quemarCalorias(90))
	}
}


describe "Personas" {

	const calamardo            = new Sedentario(peso = 60, tiempo = 5)
	const bob 				   = new Atleta(peso = 40)
	const maratonBA            = new Maraton(intensidad = 1.5)  //Una maraton con intensidad 1.5
	const correrEnLaPlaya      = new Running(intensidad = 1.2)  // Una actividad de running con intensisdad 1.2
	const remarEnElDelta       = new Remo()                     // Una actividad de remo
	const remarEnCaminoRemeros = new RemoDeCompeticion()        // Una actividad de remo comptetitivo

  	test "2.1.1 test sedentario running" {
		calamardo.realizarPractica(correrEnLaPlaya)
		assert.equals(59.948, calamardo.peso().truncate(3))
  	}

	test '2.1.2 test sedentario maraton' {
		calamardo.realizarPractica(maratonBA)
		assert.equals(59.871, calamardo.peso().truncate(3))
	}

	test '2.1.3 test sedentario remo' {
		calamardo.realizarPractica(remarEnElDelta)
		assert.equals(59.925, calamardo.peso().truncate(3))
	}

	test '2.1.3 test sedentario remo competicion' {
		calamardo.realizarPractica(remarEnCaminoRemeros)
		assert.equals(59.927, calamardo.peso().truncate(3))
	} 

	test '2.1.5 test sedentario no puede practicar' {
		calamardo.peso(40)
		assert.throwsException({ calamardo.realizarPractica(correrEnLaPlaya) })
		assert.equals(40, calamardo.peso())
	}

	test "2.2.1 test atleta running" {
		bob.realizarPractica(correrEnLaPlaya)
		assert.equals(39.725, bob.peso().truncate(3))
	}

	test "2.2.2 test atleta maraton" {
		bob.realizarPractica(maratonBA)
		assert.equals(37.812, bob.peso().truncate(3))
	}

	test "2.2.3 test atleta remo" {
		assert.throwsException({ bob.realizarPractica(remarEnElDelta) })
		assert.equals(40, bob.peso())
	}

	test "2.2.4 test atleta remo de competición" {
		bob.realizarPractica(remarEnCaminoRemeros)
		assert.equals(39.406, bob.peso().truncate(3))
	}
}
	
	
 

//punto 3: Consultas
//	test "3.1 el mejor predio" {
//		//El mejor predio del clubBarrial para bob debería ser recreo		
//		//El mejor predio del clubBarrial para calamardo debería ser recreo		
//	}	
	
//	test "3.2 predios tranquis" {
//		//No debería haber predios tranquis en el clubBarrial para bob
//		//Los predios tranquis del clubBarrial para calamardo solo incluyen a recreo  
//	}
	
//	test "3.3 rutinas más exigentes" {
//		//Las rutinas más exigentes del clubBarrial para bob son maratonBA y remarEnCaminoRemeros
//		//Las rutinas más exigentes del clubBarrial para calamardo son maratonBA y remarEnElDelta
//	}
	




